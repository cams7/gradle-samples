//export LD_LIBRARY_PATH=/home/cams7/desenv/github/gradle-samples/samples/native-binaries/cpp/build/binaries/helloSharedLibrary
buildscript {	                
	repositories {
		mavenCentral()
		maven {url uri('/home/cams7/desenv/github/gradle-samples/repo')}
	}
	dependencies {	
		classpath 'dom4j:dom4j:1.6.+'		
		classpath 'br.com.cams7.plugin:language-native:1.0-SNAPSHOT'
	}
}

apply plugin: 'br.com.cams7.cpp'

model {
    components {
        hello(NativeLibrarySpec)
    }
}

model {
    components {
        main(NativeExecutableSpec) {
            sources {
                cpp {
                    lib library: "hello"
                }
            }
        }
    }
}


binaries.all {
    // Define a preprocessor macro for every binary
    cppCompiler.define "NDEBUG"

    // Define toolchain-specific compiler and linker options
    if (toolChain in Gcc) {
        cppCompiler.args "-O2", "-fno-access-control"
        linker.args "-Xlinker", "-S"
    }
    if (toolChain in VisualCpp) {
        cppCompiler.args "/Zi"
        linker.args "/DEBUG"
    }
}

// For any shared library binaries built with Visual C++, define the DLL_EXPORT macro
binaries.withType(SharedLibraryBinarySpec) {
    if (toolChain in VisualCpp) {
        cppCompiler.define "DLL_EXPORT"
    }
}


