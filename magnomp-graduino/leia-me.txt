Este script provê uma interface de linha de comando para compilar e gravar sketches do
Arduino. Ele tenta imitar o comportamento da IDE padrão do Arduino, com duas exceções:
  1. Ele não fará nenhuma mágica no seu código fonte. Isto significa que não haverão
     protótipos de funções sendo gerados e você terá que dar um #include "Arduino.h"
     no projeto.
  2. Ele não compilará um arquivo que não tenha sido alterado desde a última compilação.
     A IDE sempre compila TODOS os arquivos do projeto + TODOS os arquivos do Arduino
     core + TODAS as bibliotecas que você está utilizando. É por isso que a compilação
     demora tanto.

O script fornece três tasks para o Gradle:
  1. build -> Vai compilar e linkar o projeto e todos os arquivos necessários do Arduino.
     Você pode utilizar o parâmetro -Pverbose para ver todos os comandos sendo executados
     por baixo dos panos.
  2. upload -> Faz o build e grava na placa Arduino. Você pode utilizar o parâmetro
     -Pverbose para ver todos os comandos sendo executados por baixo dos panos. A task
     upload depende da task build, então você não precisa dar um build antes de um
     upload.
  3. clean -> Limpa todos os arquivos gerados pelo build.

Exemplos:
> gradle build
> gradle upload
> gradle clean upload
> gradle build -Pverbose
> gradle upload -Pverbose

Arquivos:
  1. arduino.gradle -> É aqui que as tasks estão implementadas. Normalmente você
     não deverá editar este arquivo de forma alguma.
  2. properties.gradle -> Onde você define coisas que são específicas sobre o seu
     ambiente, como a pasta onde a IDE do Arduino está instalada, a porta utilizada
     para comunicação com o Arduino, etc. Este arquivo não deve ir para o sistema de
     controle de versão já que o seu conteúdo é específico para cada máquina.
  3. build.gradle -> Este é o seu arquivo de build, onde você pode implementar o que
     quiser que é relacionado ao seu projeto.

Configurando:
  1. Edite o arquivo properties.gradle seguindo as instruções contidas no arquivo.
  2. Edite o arquivo build.gradle seguindo as instruções contidas no arquivo.
  3. Coloque o build.gradle, arduino.gradle e properties.gradle na mesma pasta onde
     está localizado o arquivo principal do projeto.